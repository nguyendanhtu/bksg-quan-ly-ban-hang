///************************************************
/// Generated by: DuongMinhTu
/// Date: 14/07/2013 11:50:58
/// Goal: Create User Service Class for V_DM_KHACH_HANG
///************************************************
/// <summary>
/// Create User Service Class for V_DM_KHACH_HANG
/// </summary>

namespace SaleUS
{
using SaleDS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using System;


public class US_V_DM_KHACH_HANG : US_Object
{
	private const string c_TableName = "V_DM_KHACH_HANG";
#region "Public Properties"
	public decimal dcid 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "id", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["id"] = value;
		}
	}

	public bool IsidNull()	{
		return pm_objDR.IsNull("id");
	}

	public void SetidNull() {
		pm_objDR["id"] = System.Convert.DBNull;
	}

	public string strMA_DOI_TUONG 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "MA_DOI_TUONG", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["MA_DOI_TUONG"] = value;
		}
	}

	public bool IsMA_DOI_TUONGNull() 
	{
		return pm_objDR.IsNull("MA_DOI_TUONG");
	}

	public void SetMA_DOI_TUONGNull() {
		pm_objDR["MA_DOI_TUONG"] = System.Convert.DBNull;
	}

	public string strTEN_DOI_TUONG 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "TEN_DOI_TUONG", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["TEN_DOI_TUONG"] = value;
		}
	}

	public bool IsTEN_DOI_TUONGNull() 
	{
		return pm_objDR.IsNull("TEN_DOI_TUONG");
	}

	public void SetTEN_DOI_TUONGNull() {
		pm_objDR["TEN_DOI_TUONG"] = System.Convert.DBNull;
	}

	public string strSDT 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "SDT", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["SDT"] = value;
		}
	}

	public bool IsSDTNull() 
	{
		return pm_objDR.IsNull("SDT");
	}

	public void SetSDTNull() {
		pm_objDR["SDT"] = System.Convert.DBNull;
	}

	public string strEMAIL 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "EMAIL", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["EMAIL"] = value;
		}
	}

	public bool IsEMAILNull() 
	{
		return pm_objDR.IsNull("EMAIL");
	}

	public void SetEMAILNull() {
		pm_objDR["EMAIL"] = System.Convert.DBNull;
	}

	public string strDIA_CHI 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "DIA_CHI", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["DIA_CHI"] = value;
		}
	}

	public bool IsDIA_CHINull() 
	{
		return pm_objDR.IsNull("DIA_CHI");
	}

	public void SetDIA_CHINull() {
		pm_objDR["DIA_CHI"] = System.Convert.DBNull;
	}

	public string strFAX 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "FAX", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["FAX"] = value;
		}
	}

	public bool IsFAXNull() 
	{
		return pm_objDR.IsNull("FAX");
	}

	public void SetFAXNull() {
		pm_objDR["FAX"] = System.Convert.DBNull;
	}

	public string strMA_SO_THUE 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "MA_SO_THUE", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["MA_SO_THUE"] = value;
		}
	}

	public bool IsMA_SO_THUENull() 
	{
		return pm_objDR.IsNull("MA_SO_THUE");
	}

	public void SetMA_SO_THUENull() {
		pm_objDR["MA_SO_THUE"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_V_DM_KHACH_HANG() 
	{
		pm_objDS = new DS_V_DM_KHACH_HANG();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_V_DM_KHACH_HANG(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_V_DM_KHACH_HANG(decimal i_dbID) 
	{
		pm_objDS = new DS_V_DM_KHACH_HANG();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
}
}
